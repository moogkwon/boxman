<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="emp">
	<!-- 사원리스트 불러오기 -->
	<select id="selectEmpList" resultType="map">
		SELECT A.*, DEPTNAME,
		JOBNAME
		FROM DEPARTMENT D JOIN EMPLOYEE A ON (A.DEPTNO = D.DEPTNO)
		JOIN
		EMPJOB J ON (A.JOBNO=J.JOBNO)
		ORDER BY A.EMPNO, A.JOBNO
	</select>
	<select id="selectEmpCount" resultType="_int">
		SELECT COUNT(*) FROM
		EMPLOYEE
	</select>
	<!-- 사원리스트 불러오기끝 -->

	<!-- 사원등록 -->
	<insert id="insertEmp" parameterType="map">
		INSERT INTO EMPLOYEE VALUES(SEQ_EMPLOYEE.NEXTVAL,#{deptNo}, #{jobNo},
		#{empSal}, #{empId}, #{empPassword}, #{empName},#{empGender}, #{empPhone}
		,#{empEmail}, #{empAddr},#{empSSN}, #{empBank}, #{empBankNum},
		default, null, default)
		<selectKey keyProperty="empNo" resultType="string"
			order="AFTER">
			SELECT SEQ_EMPLOYEE.CURRVAL FROM DUAL
		</selectKey>
	</insert>

	<!-- 사원첨부파일등록 -->
	<insert id="insertEmpFile" parameterType="map">
		INSERT INTO EMPFILE
		VALUES(SEQ_EMPFILE.NEXTVAL,#{empNo}, #{efcName}, #{efOrgName},
		#{efReName})
	</insert>
	<!-- 사원등록끝 -->

	<!-- 사원상세보기 -->
	<select id="selectEmpOne" resultType="map" parameterType="_int">
		SELECT
		* FROM EMPLOYEE 
		JOIN DEPARTMENT USING(DEPTNO)
		JOIN EMPJOB ON (EMPLOYEE.JOBNO=EMPJOB.JOBNO)
		WHERE EMPLOYEE.EMPNO=#{empNo}
	</select>
	<select id="selectEmpFileList" resultType="empFile"
		parameterType="_int">
		SELECT * FROM EMPFILE WHERE EMPNO=#{empNo}
	</select>
	<!-- 사원상세보기끝 -->
	<!-- 사원로그인 -->
	<select id="selectLoginEmp" parameterType="map" resultType="map">
		SELECT * FROM EMPLOYEE E JOIN EMPFILE EF ON E.EMPNO=EF.EMPNO (+) WHERE E.EMPID=#{empId} AND E.EMPENTYN='N' AND EFCNAME='증명사진'
	</select>
	<!-- 사원로그인끝 -->
	<!-- 사원검색 -->
	<select id="selectEmpSearchList" resultType="map" parameterType="map">
		SELECT A.*, DEPTNAME,
		JOBNAME
		FROM DEPARTMENT D JOIN EMPLOYEE A ON (A.DEPTNO = D.DEPTNO)
		JOIN
		EMPJOB J ON (A.JOBNO=J.JOBNO)
		WHERE 1=1 
 		<choose>
			<when test="type eq 'deptName'">
				AND A.DEPTNO=(SELECT DEPTNO FROM DEPARTMENT WHERE DEPTNAME = #{data}) 
			</when>
			<when test="type eq 'jobName'">
				AND A.JOBNO=(SELECT JOBNO FROM EMPJOB WHERE JOBNAME = #{data}) 
			</when>
			<otherwise>
				AND A.${type} LIKE '%'||#{data}||'%' 
			</otherwise>
		</choose>
		ORDER BY A.EMPNO, A.JOBNO
	</select>
	<select id="selectEmpSearchCount" resultType="_int" parameterType="map">
		SELECT COUNT(*) FROM EMPLOYEE A WHERE 1=1
		<choose>
			<when test="type eq 'deptName'">
				AND A.DEPTNO=(SELECT DEPTNO FROM DEPARTMENT WHERE DEPTNAME = #{data}) 
			</when>
			<when test="type eq 'jobName'">
				AND A.JOBNO=(SELECT JOBNO FROM EMPJOB WHERE JOBNAME = #{data}) 
			</when>
			<otherwise>
				AND A.${type} LIKE '%'||#{data}||'%' 
			</otherwise>
		</choose>
	</select>
	<!-- 아이디중복확인 -->
	<select id="checkId" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM EMPLOYEE WHERE EMPID=#{empId}
	</select>
	<!-- 첨부파일삭제 -->
	<delete id="deleteEmpFile" parameterType="_int">
		DELETE FROM EMPFILE WHERE EFNO=#{efNo}
	</delete>
	<!-- 사원수정 -->
	<update id="updateEmp" parameterType="map">
		UPDATE EMPLOYEE SET EMPSAL=#{empSal}, EMPPHONE=#{empPhone}, EMPEMAIL=#{empEmail}, 
			DEPTNO=#{deptNo}, JOBNO=#{jobNo}, EMPBANK=#{empBank}, EMPBANKNUM=#{empBankNum}, EMPADDR=#{empAddr}
			WHERE EMPNO=#{empNo}
	</update>
	<!-- 비밀번호변경 -->
	<update id="updatePassword" parameterType="map">
		UPDATE EMPLOYEE SET EMPPASSWORD=#{empPassword} WHERE EMPNO=#{empNo}
	</update>
	<!-- 출퇴근위치정보 확인 -->
	<select id="checkLocation" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM WORKLOCATION WHERE WOX=TO_CHAR(#{la},'fm999.00') AND WOY=TO_CHAR(#{lo},'fm999.00')
	</select>
	<!-- 출근등록 -->
	<insert id="insertGotoWork" parameterType="map">
		INSERT INTO ATTENDANCE VALUES(SEQ_ATTENDANCE.NEXTVAL, #{empNo}, DEFAULT, DEFAULT, NULL, 
		CASE
			WHEN
				(TO_DATE(SYSDATE, 'hh24:mi:ss') - to_date('09:01:00','hh24:mi:ss')) * 24 * 60 * 60 > 0 THEN '지각'
			ELSE '출근'
		END
		)
	</insert>
	
	<!-- 출근 시퀀스값 받아오기 -->
	<select id="selectAttenNo" parameterType="map" resultType="_int">
		SELECT ATTENNO FROM ATTENDANCE WHERE ATTENNO=#{attenNo}
	</select>
	
	<!-- 퇴근등록 -->
	<update id="updateOffWork" parameterType="map">
		UPDATE ATTENDANCE SET attenEnd = DEFAULT WHERE EMPNO=#{empNo} and TO_CHAR(SYSDATE,'YYYY-MM-DD')=TO_CHAR(ATTENDAY,'YYYY-MM-DD')
	</update>
	<!-- 출/퇴근 체크용 한개 보기 -->
	<select id="selectAttenOne" parameterType="map" resultType="map">
		SELECT * FROM ATTENDANCE WHERE EMPNO=#{empNo} AND TO_CHAR(SYSDATE,'YYYY-MM-DD')=TO_CHAR(ATTENDAY,'YYYY-MM-DD')
	</select>
	
	<!-- 근태리스트출력 -->
	<select id="selectAttenList" parameterType="map" resultType="map">
		SELECT A.*, B.*, C.*,
		 	TO_CHAR(ATTENDAY,'DY') AS DY
		 FROM ATTENDANCE A 
		 JOIN EMPLOYEE B ON A.EMPNO=B.EMPNO
		 JOIN DEPARTMENT C ON B.DEPTNO=C.DEPTNO
		 WHERE 1=1
		<choose>
			<when test="temp eq 'my'"><!-- 마이페이지 -->
				AND	A.EMPNO=#{empNo}
				ORDER BY A.ATTENDAY 
			</when>
			<when test="temp eq 'search'"><!-- 마이페이지에서 검색 -->
				AND TO_CHAR(A.ATTENDAY,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND A.EMPNO=#{empNo}
				ORDER BY A.ATTENDAY
			</when>
			<when test="temp eq 'all'"><!-- 인사관리 -->
				AND TO_CHAR(A.ATTENDAY,'YYYY-MM-DD')=TO_CHAR(SYSDATE,'YYYY-MM-DD')
				ORDER BY B.DEPTNO, A.ATTENDAY DESC
			</when>
			<when test="temp eq 'searchAll'"><!-- 인사관리에서 검색 -->
				AND TO_CHAR(A.ATTENDAY,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				<if test="type != null and type != ''">
					<if test="type eq 'empNo'">
						AND A.${type} like '%'||#{data}||'%'
						ORDER BY B.DEPTNO, A.ATTENDAY
					</if>
					<if test="type neq 'empNo'">
						AND ${type} like '%'||#{data}||'%'
						ORDER BY B.DEPTNO, A.ATTENDAY
					</if>
				</if>
			</when>
		</choose>
	</select>
	<select id="selectAttenCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM ATTENDANCE WHERE 1=1
		<choose>
			<when test="temp eq 'search'">
				AND TO_CHAR(ATTENDAY,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND EMPNO=#{empNo}
			</when>
			<when test="temp eq 'searchAll'">
				AND TO_CHAR(ATTENDAY,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND EMPNO=#{empNo}
			</when>
		</choose>
	</select>
	
	<!-- 휴가리스트출력 -->
	<select id="selectDayOffList" parameterType="map" resultType="map">
		SELECT A.*, B.*, C.*
		 FROM DAYOFF A 
		 JOIN EMPLOYEE B ON A.EMPNO=B.EMPNO
		 JOIN DEPARTMENT C ON B.DEPTNO=C.DEPTNO
		 WHERE 1=1
		<choose>
			<when test="temp eq 'my'"><!-- 마이페이지 -->
				AND	A.EMPNO=#{empNo}
				AND EXTRACT(YEAR FROM A.DOSTART)=EXTRACT(YEAR FROM SYSDATE)
				ORDER BY A.DOSTART DESC
			</when>
			<when test="temp eq 'search'"><!-- 마이페이지에서 검색 -->
				AND TO_CHAR(A.DOSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND A.EMPNO=#{empNo}
			</when>
			<when test="temp eq 'all'"><!-- 인사관리 -->
				AND TO_CHAR(A.DOSTART,'YYYY-MM-DD')=TO_CHAR(SYSDATE,'YYYY-MM-DD')
				ORDER BY B.DEPTNO, A.DOSTART DESC
			</when>
			<when test="temp eq 'searchAll'"><!-- 인사관리에서 검색 -->
				AND TO_CHAR(A.DOSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				<if test="type != null and type != ''">
					<if test="type eq 'empNo'">
						AND A.${type} like '%'||#{data}||'%'
						ORDER BY A.DOSTART DESC
					</if>
					<if test="type neq 'empNo'">
						AND ${type} like '%'||#{data}||'%'
						ORDER BY A.DOSTART DESC
					</if>
				</if>
			</when>
		</choose>
	</select>
	<select id="selectDayOffCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM DAYOFF WHERE 1=1
		<choose>
			<when test="temp eq 'search' or temp eq 'searchAll'">
				AND TO_CHAR(DOSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND EMPNO=#{empNo}
			</when>
			<when test="temp eq 'my'">
				AND EMPNO=#{empNo} 
				AND EXTRACT(YEAR FROM DOSTART) = EXTRACT(YEAR FROM SYSDATE)
			</when>
		</choose>
	</select>
	
	<!-- 출장리스트출력 -->
	<select id="selectBTList" parameterType="map" resultType="map">
		SELECT A.*, B.*, C.*
		 FROM BUSINESSTRIP A 
		 JOIN EMPLOYEE B ON A.EMPNO=B.EMPNO
		 JOIN DEPARTMENT C ON B.DEPTNO=C.DEPTNO
		 WHERE 1=1
		<choose>
			<when test="temp eq 'my'"><!-- 마이페이지 -->
				AND	A.EMPNO=#{empNo}
				AND TO_CHAR(A.BTSTART,'YYYY')=TO_CHAR(SYSDATE,'YYYY')
				ORDER BY A.BTSTART DESC
			</when>
			<when test="temp eq 'search'"><!-- 마이페이지에서 검색 -->
				AND TO_CHAR(A.BTSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND A.EMPNO=#{empNo}
				ORDER BY A.BTSTART DESC
			</when>
			<when test="temp eq 'all'"><!-- 인사관리 -->
				AND TO_CHAR(A.BTSTART,'YYYY-MM')=TO_CHAR(SYSDATE,'YYYY-MM')
				ORDER BY B.DEPTNO, A.BTSTART DESC
			</when>
			<when test="temp eq 'searchAll'"><!-- 인사관리에서 검색 -->
				AND TO_CHAR(A.BTSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				<if test="type != null and type != ''">
					<if test="type eq 'empNo'">
						AND A.${type} like '%'||#{data}||'%'
						ORDER BY B.DEPTNO, A.BTSTART DESC
					</if>
					<if test="type neq 'empNo'">
						AND ${type} like '%'||#{data}||'%'
						ORDER BY B.DEPTNO, A.BTSTART DESC
					</if>
				</if>
			</when>
		</choose>
	</select>
	<select id="selectBTCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM BUSINESSTRIP WHERE 1=1
		<choose>
			<when test="temp eq 'search'">
				AND TO_CHAR(BTSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND EMPNO=#{empNo}
			</when>
			<when test="temp eq 'searchAll'">
				AND TO_CHAR(BTSTART,'YYYY-MM-DD') BETWEEN #{startDay} AND #{endDay}
				AND EMPNO=#{empNo}
			</when>
		</choose>
	</select>

	<!-- 근태수정용한개보기 -->
	<select id="selectAttenNoOne" parameterType="map" resultType="map">
		SELECT  A.*,E.*,D.DEPTNAME,TO_CHAR(ATTENDAY,'DY') AS DY FROM ATTENDANCE A JOIN EMPLOYEE E ON (A.EMPNO=E.EMPNO)
		JOIN DEPARTMENT D ON (E.DEPTNO=D.DEPTNO)
		WHERE ATTENNO=#{attenNo}
	</select>
	
	<!-- 근태수정신청 -->
	<insert id = "insertUpAttendance" parameterType="map">
		INSERT INTO UPATTENDANCE VALUES(
			SEQ_UPATTENDANCE.NEXTVAL, #{attenNo}, #{uaStart}, #{uaEnd}, #{uaCate},default, default, #{uaReason}
		)
	</insert>
	
	<!-- 남은 휴가일수 보기 -->
	<select id="selectDoRemaining" parameterType="map" resultType="map">
		<choose>
			<when test="temp eq 'yes'">
				SELECT MIN(doRemainingDays) AS DOREMAININGDAYS FROM DAYOFF WHERE
				EMPNO=#{empNo} AND EXTRACT(YEAR FROM DOSTART) = EXTRACT(YEAR FROM SYSDATE)
			</when>
			<when test="temp eq 'no'">
				SELECT DOCOUNT AS DOREMAININGDAYS FROM DAYOFFCOUNT WHERE
				EMPNO=#{empNo}
			</when>
		</choose>
	</select> 
	
	<!-- 휴가신청 -->
	<insert id="insertDayOff" parameterType="map">
		INSERT INTO DAYOFF VALUES(SEQ_DAYOFF.NEXTVAL, #{empNo}, #{docName}, #{doStart}, #{doEnd}, #{doDays}, 
		(#{DOREMAININGDAYS}-#{doDays}),DEFAULT, DEFAULT, NULL
		)
	</insert>
	
	<!-- 출장신청 -->
	<insert id="insertBT" parameterType="map">
		INSERT INTO BUSINESSTRIP VALUES(SEQ_BUSINESSTRIP.NEXTVAL, #{empNo},#{btStart}, #{btEnd}, #{btReason})
	</insert>
</mapper>